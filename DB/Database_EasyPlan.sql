-- MySQL dump 10.13  Distrib 8.0.31, for macos12 (x86_64)
--
-- Host: localhost    Database: easyplan
-- ------------------------------------------------------
-- Server version	8.0.19

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `corsodilaurea`
--

DROP TABLE IF EXISTS `corsodilaurea`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `corsodilaurea` (
  `IDCorsoDiLaurea` int NOT NULL,
  `Tipo` tinyint NOT NULL,
  `AnnoOffertaFormativa` char(7) NOT NULL,
  PRIMARY KEY (`IDCorsoDiLaurea`),
  KEY `AnnoOffertaFormativa_idx` (`AnnoOffertaFormativa`),
  CONSTRAINT `AnnoOffertaFormativa` FOREIGN KEY (`AnnoOffertaFormativa`) REFERENCES `offertaformativa` (`annooffertaformativa`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `corsodilaurea`
--

LOCK TABLES `corsodilaurea` WRITE;
/*!40000 ALTER TABLE `corsodilaurea` DISABLE KEYS */;
INSERT INTO `corsodilaurea` VALUES (1,1,'2018/19'),(2,2,'2018/19');
/*!40000 ALTER TABLE `corsodilaurea` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `curriculum`
--

DROP TABLE IF EXISTS `curriculum`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `curriculum` (
  `IDCurriculum` int NOT NULL,
  `Nome` varchar(150) NOT NULL,
  `IDCorsoDiLaurea` int NOT NULL,
  PRIMARY KEY (`IDCurriculum`),
  KEY `IDCorsoDiLaurea_idx` (`IDCorsoDiLaurea`),
  CONSTRAINT `IDCorsoDiLaurea` FOREIGN KEY (`IDCorsoDiLaurea`) REFERENCES `corsodilaurea` (`IDCorsoDiLaurea`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `curriculum`
--

LOCK TABLES `curriculum` WRITE;
/*!40000 ALTER TABLE `curriculum` DISABLE KEYS */;
INSERT INTO `curriculum` VALUES (1,'Curriculum Standard',1),(2,'Cloud Computing',2),(3,'Data Science',2),(4,'Internet of Things (IoT)',2),(5,'Sicurezza Informatica',2),(6,'Sistemi Informatici e Tecnologie del Software (SITS)',2);
/*!40000 ALTER TABLE `curriculum` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `docente`
--

DROP TABLE IF EXISTS `docente`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `docente` (
  `CodiceDocente` int NOT NULL,
  `Nome` varchar(45) NOT NULL,
  `Cognome` varchar(45) DEFAULT NULL,
  `IndirizzoPaginaWeb` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`CodiceDocente`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `docente`
--

LOCK TABLES `docente` WRITE;
/*!40000 ALTER TABLE `docente` DISABLE KEYS */;
INSERT INTO `docente` VALUES (1,'Alberto','Negro','https://docenti.unisa.it/000792/home'),(2,'Barbara','Masucci','https://docenti.unisa.it/005096/home'),(3,'Marcella','Anselmo','https://docenti.unisa.it/001367/home'),(4,'Giovanni','Vincenzi','https://docenti.unisa.it/001518/home'),(5,'Giacomo ','Lenzi ','https://docenti.unisa.it/023111/home'),(6,'Costantino','Delizia','https://docenti.unisa.it/004267/home'),(7,'Rosalba ','Zizza','https://docenti.unisa.it/020880/home'),(8,'Gianluca','De Marco','https://docenti.unisa.it/004514/home'),(9,'Maurizio','Tucci','https://docenti.unisa.it/001463/home'),(10,'Riccardo ','Distasi','https://docenti.unisa.it/004532/home'),(11,'Michele ','Nappi','https://docenti.unisa.it/004288/home'),(12,'Patrizia','Di Gironimo','https://docenti.unisa.it/001594/home'),(13,'Docente ','Fittizio','Sito Web Non Disponibile'),(14,'Gerardo ','Iovane','https://docenti.unisa.it/004508/home'),(15,'Clelia','De Felice','https://docenti.unisa.it/001119/home'),(16,'Margherita','Napoli','https://docenti.unisa.it/000702/home'),(17,'Adele Anna','Rescigno','https://docenti.unisa.it/001727/home'),(18,'Vittorio','Fuccella','https://docenti.unisa.it/004376/home'),(19,'Vincenzo ','Deufemia','https://docenti.unisa.it/005087/home'),(20,'Salvatore ','La Torre','https://docenti.unisa.it/004821/home'),(21,'Carmine','Gravino','https://docenti.unisa.it/004724/home'),(22,'Genoveffa','Tortora','https://docenti.unisa.it/000751/home'),(23,'Giuseppe','Polese','https://docenti.unisa.it/004281/home'),(24,'Monica Maria Lucia','Sebillo','https://docenti.unisa.it/004827/home'),(25,'Giuseppe ','Cattaneo','https://docenti.unisa.it/000763/home'),(26,'Bruno ','Carpentieri','https://docenti.unisa.it/001368/home'),(27,'Andrea Francesco','Abate','https://docenti.unisa.it/004620/home'),(28,'Ugo','Vaccaro','https://docenti.unisa.it/000806/home'),(29,'Annalisa','De Bonis','https://docenti.unisa.it/004511/home'),(30,'Delfina','Malandrino','https://docenti.unisa.it/005126/home'),(31,'Francesco','Palmieri','https://docenti.unisa.it/026587/home'),(32,'Michele ','Risi','https://docenti.unisa.it/005637/home'),(33,'Rita','Francese','https://docenti.unisa.it/004763/home'),(34,'Gennaro','Costagliola','https://docenti.unisa.it/001602/home'),(35,'Antonio','Di Crescenzo','https://docenti.unisa.it/005305/home'),(36,'Virginia','Giorno','https://docenti.unisa.it/000781/home'),(37,'Barbara','Martinucci','https://docenti.unisa.it/021435/home'),(38,'Andrea','De Lucia','https://docenti.unisa.it/003241/home'),(39,'Filomena','Ferrucci','https://docenti.unisa.it/001775/home'),(40,'Vittorio','Scarano','https://docenti.unisa.it/001717/home'),(41,'Luisa','Gargano','https://docenti.unisa.it/000779/home'),(42,'Raffaele ','Cerulli','https://docenti.unisa.it/001227/home'),(43,'Francesco','Carrabs','https://docenti.unisa.it/020511/home'),(44,'Roberto ','De Prisco','https://docenti.unisa.it/003550/home'),(45,'Giuliana ','Vitiello','https://docenti.unisa.it/003730/home'),(46,'Dajana','Conte','https://docenti.unisa.it/020280/home'),(47,'Alfredo ','De Santis','https://docenti.unisa.it/000769/home'),(48,'Amelia Giuseppina','Nobile','https://docenti.unisa.it/000706/home'),(49,'Roberto','De Luca','https://docenti.unisa.it/001659/home'),(50,'Paolo','D\'arco','https://docenti.unisa.it/004531/home'),(51,'Angela Maria ','Cardone','https://docenti.unisa.it/005020/home');
/*!40000 ALTER TABLE `docente` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `esame`
--

DROP TABLE IF EXISTS `esame`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `esame` (
  `CodiceEsame` int NOT NULL,
  `Nome` varchar(150) NOT NULL,
  `CFU` int NOT NULL,
  `OreLezione` int DEFAULT NULL,
  `Semestre` varchar(80) DEFAULT NULL,
  `Descrizione` longtext,
  PRIMARY KEY (`CodiceEsame`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `esame`
--

LOCK TABLES `esame` WRITE;
/*!40000 ALTER TABLE `esame` DISABLE KEYS */;
INSERT INTO `esame` VALUES (1,'Architettura degli elaboratori',9,72,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Base - Formazione Informatica di Base\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione\nNell\'ambito dell\'inquadramento metodologico che vede un computer come stratificazione di macchine virtuali, lo studente approfondirà la conoscenza dei principi e delle caratteristiche di base del primo livello della gerarchia, illustrato attraverso lo studio del linguaggio Assembler di base di una architettura RISC e dei corrispondenti fomrati del linguaggio macchina.\n\nNel quadro di riferimento del modello di Von Neumann, lo studente acquisirà la conoscenza della metodologia implementativa dell\'insieme di istruzioni Assembler di base, affrontando lo studio della struttura hardware della unità centrale di elaborazione, della unità di controllo e dei dispositivi di memoria indirizzabile.\n\nAttraverso lo studio della unità aritmetico-logica lo studente apprenderà i concetti di base per la implementazione delle funzioni booleane mediante reti combinatorie.\n\nLo studente acquisirà il concetto di automa a stati finiti come modello teorico per la descrizione del funzionamento della unità di controllo ed i concetti di base per la relativa implementazione hardware mediante una rete sequenziale. Lo studio della implementazione sarà completato con l\'apprendimento delle nozioni di base per la misura e il miglioramento delle prestazione hardware.\n\nInoltre, lo studente acquisirà una chiara visione delle connessioni delle conoscenze acquisite  con questo insegnamento con gli argomenti approfonditi in altri insegnamenti, comprendendo i collegamenti che sussistono tra la esecuzione del programma in linguaggio macchina a carico dell\'hardware, da un lato, con la codifica del programm e con la compilazione e la gestione del processo di esecuzione a carico del sistema operativo dall\'altro.\n\nCapacità di Applicare Conoscenza e Comprensione\n-Esecuzione e comprensione del processo di traduzione nell\'assembler di una architettura RISC dei costrutti di base del linguaggio e, scelto come esemplificativo dei linguaggi procedurali di livello utente.\n\n-Analisi di una rete combinatoria e determinazione della relativa funzione booleana implementata.\n\n-Esecuzione delle conversioni in notazione decimale dei proncipali formati di raprresentazione interna dei numeri interi e frazionari.\n\n-Esecuzione di semplici calcoli di valutazione delle prestazioni hardware in funzione sia del ciclo che della frequenza di clock.\n\nMediante le conoscenze acquisite attraverso lo studio di una archtettura RISC sui pricnipi di base della progettazione di un linguaggio Assembler e sulle scelte architetturali da affrontare nella relativa implementazione hardware, lo studente sarà in grado di orientarsi in successivi processi di apprendimento di ulteriori linguaggi Assembler e delle relative architetture hardware.\n'),(2,'Matematica Discreta',9,72,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o integrative - Attività/Formative Integrative/Affini\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di comprensione.\nIl corso intende fornirte le nozioni di base delle strutture discrete, in modo conciso e adatto alle applicazioni, abituando lo studente a formalizzare correttamente i problemi ed a ragionaere in modo rigoroso.\n\nCapacità di Applicare Conoscenza e Comprensione.\nObiettivo del corso è anche quello di rendere lo studente capace di risolvere semplici problemi ed esercizi applicando le conoscenze teoriche acquisite. In particolare lo studente dovrà essere in grado di effettuare operazioni su insiemi e su matrici, individuare corrispondenze, applicazioni, ordinamenti e reticoli, relazioni di equivalenza, partizioni, strutture algebriche e sottostrutture, utilizzare l\'algoritmo Euclideo e il principio di induzione, risolvere sistemi di equazioni lineari e congruenziali, determinare basi e dimensione di uno spazio vettoriale, equazioni parametriche e cartesiane di rette e piani nello spazio euclideo.\n'),(3,'Programmazione I',9,96,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Base - Formazione Informatica di Base\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\nConoscenza dei costrutti di un linguaggio di programmazione di tipo procedurale di alto livello per la soluzione di problemi di piccole dimensioni. Conoscenza dei principi di base della programmazione strutturata e modulare. Conoscenza dei principi e degli strumenti relativi alla traduzione di programmi scritti in linguaggio ad alto livello in programmi scritti in linguaggio macchina. Conoscenza dei principali schemi algoritmici per la scansione di strutture lineari utilizzando array e file.\n\nCapacità di applicare conoscenza e comprensione.\nCapacità di utilizzare le conoscenze acquisite nella ideazione,progettazione, codifica, compilazione, esecuzione e verifica di semplici progetti di programmazione per la soluzione di problemi di piccole dimensioni.\n'),(4,'Analisi Matematica',9,72,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi - Attività Formative Integrative/Affini\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\nNozioni di base della matematica del continuo:\n	-Calcolo di limiti di funzioni;\n	-Calcolo di derivate;\n	-Studio dell\'andamento del grafico di una funzione a partire dalla sua espressione algebrica;\n	-Calcolo di semplic iintegrali;\n\nCapacità di applicare conoscenza e comprensione.\n	-Saper risolvere semplici esercizi connessi allo studio delle funzioni di una varibile reale.\n	-Saper esporre in modo chiaro e rigoroso definizioni, problemi e teoremi riguardanti i contenuti\n	 dell\'insegnamento.\n'),(5,'Metodi Matematici per l\'informatica',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Base - Formazione Informatica di Base.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\nLo studente dovrà avere conoscenza:\n	-Di semplici strumenti logici, in particolare della logica delle proposizioni e della logica dei predicati.\n	-Del ragionamento matematico che è alla base delle più comuni tecniche di dimostrazione, quali\n	dimostrazioni dirette, per contraddizione, per contrapposizione, prove esaustive e per distinzione di casi.\n	-Dei concetti di induzione, ricorsione e induzione strutturale.\n\nCapacità di applicare conoscenza e comprensione\nLo studente dovrà essere capace di:\n	-Formalizzare in maniera rigorosa, utilizzando concetti e tecniche del ragionamento matematico e logico, \n	 semplici problemi formulati in linguaggio naturale e raltivi a insiemi, stringhe, numeri, alberi o grafi.\n	-Utilizzare le tecniche di dimostrazione più comuni, elencate al paragrafo precedente, per dimostrare\n	 semplici enunciati su insiemi o numeri.\n	-Utilizzare induzione, ricorsione e induzione strutturale.\n'),(6,'Programmazione & Strutture dati',9,96,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Base - Formazione informazione di Base.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione.\nConoscenza degli algoritmi e strutture dati fondamrntali. Conoscenza delle tecniche di programmazione iterativa e ricorsiva e delle strutture dati statiche e dinamiche.\n\nCapacità di applicare conoscenza e comprensione.\n	-Analizzare problemi tipici e realizzare applicazioni che li risolvano progettando e realizzando algoritmi e \n	 strutture dati in linguaggio C. Realizzazione di progetti softwarein C di piccole dimensioni.\n	-Selezionare gli algoritmi e le strutture dati adeguate a supportare un\'applicazione, sulla base  delle \n	 specifiche esigenze applicative.\n	-Individuare appropriate soluzioni iterative o ricorsive per gestire uno specifico problema di programmazione.\n	-Comunicare informazioni, idee, problemi, spiegazioni riguardo semplici problemi di programmazione con \n	 l\'utilizzo di algoritmi e strutture dati standard.\n'),(7,'Programmazione OO',9,96,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti - Discipline informatiche.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione.\n	-Acquisizione delle competenze di base per la progettazione object-oriented attaverso la comprensione dei\n	 concetti di astrazione sui dati, di incapsulamento dell\'informazione, di coesione e accoppiamento, e di \n	 riutilizzo del codice.\n	-Comprensione delle differenze tra paradigma object-oriented e il paradigma procedurale.\n	-Conoscenza del linguaggio Java per la definizione di classi e per la promozione del riutilizzo del software.\n\nCapacità di applicare conoscenza e comprensione.\n	-Analisi di problemi, specifica dei requisiti e definizione di una strategia risolutiva con un approccio orientato\n	 agli oggetti, con la sua implementazione nel linguaggio Java, garantendo il giusto equlibrio tra qualità ed\n	 efficienza del software.\n	-Sviluppo di progetti con attività individuali e di gruppo.\n'),(8,'Base di dati',9,96,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti - Discipline informatiche.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\n	-Conoscere la struttura e le funzioni di un sistema informativo.\n	-Conoscere le tecnologie, i modelli ed i linguaggi utilizzati per la progettazione, l\'implementazione e la \n	 gestione delle base di dati.\n\nCapacità di applicare conoscenza e comprensione.\n	-Saper progettare e produrre basi di dati di buona qualità partendo da requisiti utente.\n	-Saper estrarre informazioni da una base di dati.\n	-Saper progettare applicazioni software che necessitano di interagire con una base di dati.\n	-Saper produrre una documentazione appropriata della progettazione e dell\'implementazione di una base di\n	 dati.\n	-Valutare le implicazioni sullo sviluppo di una base di dati derivanti dal trade-off tra performance ed uso di \n	 risorse.\n'),(9,'Sistemi Operativi',9,72,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti - Discipline informatiche.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\n	-Visione strutturata ed organica di un moderno sistema operativo.\n	-Comprensione delle principali scelte implementative e dei meccanismi alla base della gestione di un sistema \n	 informativo.\n	-Descrizione dell\'interfaccia ed implementazione di un fyle system.\n	-Definizione della struttura dei processi, degli algoritmi di scheduling per ottimizzare l\'uso della CPU e della\n	 sincronizzazione per la gestione delle risorse condivise.\n	-Gestione della memoria centrale.\n	-Sistema operativo Linux (Unix) con le principali system call e shell.\n\nCapacità di applicare conoscenza e comprensione.\n	-Usare, configurare ed amministrare un sistema operativo.\n	-Progettare ed implementare semplici funzioni di sistema.\n	-Valutare, in termini di risorse, il costo dei servizi offerti dal sistema ottimizzando l\'uso delle risorse disponibili.\n	-Individuare soluzioni ottimali valutandone autonomamente l\'efficienza e la correttezza formale.\n'),(10,'Progettazione di Algoritmi',9,72,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti - Discipline informatiche.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\nL\'insegnamento si prefigge i seguenti obiettivi:\n	-Fornire allo studente metodi e conoscenze atti al progetto di algoritmi efficienti.\n	-Fornire strumenti per l\'analisi delle risorse (spazio e tempo) utilizzate da algoritmi.\n	-Fornire un catalogo dei più noti ed efficienti algoritmi per problemi computazionali di base (ordinamento, \n	 ricerca, ottimizzazione di risorse, etc.).\n\nCapacità di applicare conoscenza e comprensione.\nL\'insegnamento ha come obiettivo quello di rendere lo studente capace di astrarre modelli e problemi algoritmici formali da problemi computazionali concreti, e di progettare perb essi soluzioni algoritmiche efficienti.\n'),(11,'Reti di Calcolatori',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti - Discipline informatiche.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\nLo studente dovrà:\n	-Acquisire una visione specialistica dei sistemi di comunicazione in generale, delle reti di calcolatori, del loro\n	 funzionamento e delle loro applicazioni, con particolare riferimento alle tecnologie di rete locale, \n	 matropolitana e geografica, alla loro interconnessione ed a tutte le problematiche di progettazione e \n	 realizzazione di infrastrutture di rete e di calcolo complesse.\n	-Comprendere in profondità le scelte fondamentali e le tecnologie alla base dell\'erogazione dei principali \n	servizi di rete, la loro gestione nei principali ambienti operativi ed applicazioni nella rete internet.\n	-Conoscere le nozioni teoriche alla base della trasmissione dei dati, delle problematiche di commutazione ad \n	 alte prestazioni ed dell\'interworking e le principali tecnologie di rete.\n	-Conoscre in modo approfondito i protocolli della suite TCP/IP, che sono alla base del funzionamento di \n	 internet, con particolare riferimento agli aspetti relativi alle problematiche di instradamento del traffico su \n	 internet, alle modalità di interconnessione e di peering ed alla gestione dei servizi infrastrutturali di base \n	 (domain name system, caching etc.).\n\nCapacità di applicare conoscenza e comprensione.\nLo studente dovrà essere in grado di configurare ed amministrare reti locali e piccoli internet service providers nonché di utilizzare in maniera consapevole i servizi di rete.\n'),(12,'Teconologie Software per il web',9,78,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti - Discipline informatiche.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza  e capacità di comprensione.\n	-Linguaggi per la programmazione lato client e lato server.\n	-Tecniche di progettazione e programmazione specifiche al Web.\n	-Architettura di un servlet container e delle relative applicazioni Web.\n\nCapacità di applicare conoscenza e comprensione.\n	-Progettazione e sviluppo di applicazioni Web dinamiche e responsive, di complessità e grandezza \n	medio-piccole.\n	-Istallazione delle applicazioni Web sul servlet container Tomcat.\n	-Applicazione del modello Model-View-Controller (MVC) per la progettazione di applicaioni Web.\n'),(13,'Calcolo delle probabilità e statistica matematica',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Base - Formazione informatica di Base.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\nConoscenza degli argomenti di base del calcolo delle probabilità e della statistica matematica. Capacità di individuare un modello probabilistico e di comprendere le principali carattetistiche.\n\nCapacità di applicare conoscenza e comprensione.\nCapacità di ragionamento induttivo e deduttivo nell\'affrontare problemi, soprattutto di natura informatica, coinvolgenti fenomeni casuali. Capacità di schematizzare un fenomeno aleatorio in termini rigorosi, di impostare un problema e di risolverlo utilizzando opportuni strumenti della probabilità e della statistica matematica, con \nparticolare riferimento alla probabilità discreta, alle sue basi del calcolo combinatorio, alle variabili aleatorie (comprese le principali caratteristiche), ai teoremi limite e alle loro applicazioni statistiche.\n'),(14,'Elementi di Teoria della computazione',9,72,'primo  per matricole pari, secondo per matricole dispari.','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti - Discipline informatiche.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\nObiettivo dell\'insegnamento è l\'acquisizione da parte dello studente:\n	-Del concetto di modello astratto di computazione.\n	-Della distinzione tra i concetti di computabile e non computabile.\n	-Del concetto di complessità e della distinzione tra problema trattabile e intrattabile.\n\nCapacità di applicare conoscenza e comprensione.\nAnalizzare il coomportamento di automi finiti e macchine di Turing. Progettare semplici modelli di computazione per la soluzione di problemi di decisione (prooblemi con risposta si/no).\n'),(15,'Ingegneria del software',9,78,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti - Discipline informatiche.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\nL\'insegnamento introduce:\n	-I concetti dell\'ingegneria del software, dei relativi processi, attività e deliverable.\n	-I metodi di analisi e progettazione.\n	-I linguaggi per la modellazione (in particolare UML)\n	-Le tecniche di verifica e convalida.\n\nL\'insegnamento introduce anche i concetti essenziali di team working e di organizzazione e gestione di progetti software, segnando il passaggio dalla programmazione fatta su problemi di piccola taglia, realizzata da singolo studente, in un tempo ridotto (programming in the small), allo sviluppo di sistemi software complessi, con coinvolgimento di un team e un articolazione temporale delle attività (programming in the large).\n\nL\'insegmento  mira inoltre ad approfondire le implicazioni sociali, scientifiche ed etiche della professione.\n\nCapacità di applicare conoscenza e comprensione.\nLo studente dovrà essere in grado di:\n	-Usare un approccio ingegneristico all\'analisi, progettazione, realizzazione, testing e manutenzione del\n	software.\n	-Lavorare in gruppo e organizzaere il proprio lavoro tenendo presente obiettivi e vincoli per contribuire\n	responsabilmente e proattivamente al successo del progetto e al rispetto delle scadenze.\n	-\"Entrare\" velocemente in domini di applicazioniv sempre nuovi in modo da comprenderne le esigenze e \n	 tradurle in sistemi software di qualità.\n	-Individuare la soluzione che bilanci al megli obiettivi diversi e spesso contrastanti.\n	-Motivare le scelte fatte.\n	-Relazionarsi e comunicare con diversi stakeholder adattandosi dinamicamente alle diverse caratteristiche \n	 (conoscenze, esigenze, dominio, linguaggio) degli interlocutori e agli obiettivi della comunicazione, \n	 adottando e selezionando gli strumenti di comunicazione (tecnici e non tecnici) che risultano più efficaci\n	 per lo specifico scopo.\n'),(16,'Programmazione Distribuita',9,78,'primo  per matricole disparii, secondo per matricole pari.','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti - Discipline informatiche.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\nL\'insegnamento ha un proprio obiettivo di aspetti relativi alla programmazione distribuita. Partendo dalle basi di programmazione concorrente (multithread), si esaminano le architetture distribuite e le problematiche inerenti. Viene presentata l\'architettura di Java remote method invocation e vengono presentate alcune semplici applicazioni in Java. Successivamente si approfondiscono gi aspetti relativi alla programmazione enterprise ad un livello medio-alto presentando la architettura Java Enterprise Edition (JAVA EE 7), partendo dai principi di base, passando per il layer dei dati, quello di business, quello dei servizi, e qualche cenno sul layer di presentazione. Service oriented architecture e qualche cenno sul layer di presentazione. Service oriented architeture e message oriented middleware saranno presentate come parte della Java Enterprise architecture.\n\nCapacità di applicare conoscenza e comprensione.\nGli studenti acquisiranno la capacità di descrivere. progettare e sviluppare applicazioni distribuite con proprietà di linguaggio.\n'),(17,'Ricerca Operativa',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Base - Formazione Matematico - Fisico\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\n	-Dei principali fondamenti di modellazione matematica di problemi di ottimizzazione di processi e di problemi \n	 di decisione.\n	-Delle metodologie di base per la rappresentazione di problemi di ottimizzazione lineari a variabili continue.\n	 Deglì elementi di base della teoria delle reti e della teoria dei grafi.\n	-Dei problemi elementari di ottimizzazione sui rete. Degli algoritmi elementari per la risoluzione di problemi \n	 di ottimizzazione su rete. Dei principali strumenti informatici per risolvere problemi di ottimizzazione lìineare.\n\nCapacità di applicare conoscenza e comprensione.\nLo studente dovrà essere in grado di:\n	-Rappresentare un semplice problema di ottimizzazione di processo  o di decisione tramite un modello\n	 matematico lineare a variabili continue. Risolvere semplici problemi di programmazione matematica lineare \n	 continua. Utilizzare strumenti diffusi (esempio. excel) per la soluzione di problemi di ottimizzazione.\n	-Distinguere gli strumenti di soluzione di problemi di ottimizzazione lineare continue. Modellare semplic i\n	problemi tramite grafi e reti di flusso.\n	-Risolvere, tramitre l\'utilizzo di strumenti informatici, semplici probelmi di ottimizzazione su rete.\n'),(18,'Mobile Computing',6,48,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti - discipline informatiche.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\nIl corso si prefigge l\'obiettivo di fornire allo studente le conoscenze necessartie per poter sviluppare programmi per dispositivi mobili.\n\nCapacità di applicare conoscenza e comprensione.\nProgettazione e sviluppo di programmi per dispositivi mobili, in particolare per smartphones Android.\n'),(19,'Interazione Uomo Macchina',6,48,'primo','19\nTIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o interrogative - Attività formative integrative/affini.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\nLo studente dovrà avere conoscenza:\n	-Dei fondamenti dell\'interazione uomo-macchina.\n	-Delle linee guida e dei principi a supporto dell\'usabilità dei sistemi interattivi.\n	-Delle principali tecniche di analisi dell\'usabilità e dell\'accessibilità di interfacce utente.\n	-Delle principali tecniche di progettazione del dialogo e di sistemi interattivi in generale.\n\nCapacità di applicare conoscenza e comprensione.\nLo studente dovrà essere capace di:\n	-Definire i passi necessari per ideare, progettare, sviluppare e valutare prototipi di interfacce utente in\n	 relazione alla loro usabilità.\n	-Costruire un modello degli utenti di un\'applicazione interattiva, considerando diverse piattaforme di utilizzo, \n	 inclusi dispositivi mobili e browser web.\n'),(20,'Calcolo scientifico',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o interrogative - Attività formative integrative/affini.\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\nL\'insegamento è finalizzato all\'acquisizione di conoscenze e competenze nell\'ambito del trattamento numerico di\nproblemi matematici con l\'ausilio del computer. Unitamente alla conoscenza teorica dei metodi numerici, \nl\'insegnamento si propone di analizzarli criticamente, con attenzione agli aspetti algoritmici ed allo sviluppo di\nsoftware in ambienti di calcolo scentifico. Verrà privilegiato un approccio critico alla materia, richiamando \nl\'attenzione degli studenti sui principi su cui si basa lo sviluppo di software efficiente, con riferimento alla stima dell\'attendibilità dei risoltati ottenuti, alla valutazione delle prestazioni del software sviluppato o utilizzato,\nal confronto tra le prestazioni di codici basati su metod numerici differenti, alla scrittura della documentazione \ninterna ed esterna del software sviluppato.\n\nCapacità di applicare conoscenza e comprensione.\nLo studente deve essere capace:\n	-Di risolvere problemi di calcolo scientifico mediante lo sviluppo e l\'utilizzo di software matematico e di \n	opportuni ambienti di calcolo (MATLAB oppure Octave o Scilab).\n	-Scegliere il metodo numerico più idoneo al problema in esame attraverso l\'analisi delle caratteristiche del \n	problema stesso, quali ad esempio struttura dei dati, accuratezza richiesta, stabilità del problema.\n'),(21,'Grafica e Interattività',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o interrogative - Attività formative integrative/affini.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\nLo studente dovrà avere conoscenza di base e avanzata su:\n	-Tecniche di computer grafica tridimensionale e di realtà virtuale.\n	-Principali tecniche di modellazione, illuminazione e rendering.\n	-Principali funzionalità dei motori 3D e Unity.\n	-Gli algoritmi ed i metodi computazionali su cui si basano molte delle applicazioni grafiche 3D interattive.\n\nCapacità di applicare conoscenza e comprensione.\nLo studente dovrà essere capace di:\n	-Usare motori 3D per la realizzazione di semplici giochi di esempio.\n	-Descrivere, progettare e sviluppare applicazioni virtuali interattive con proprietà di linguaggio e capacità di\n	 sintesi.\n'),(22,'Sicurezza',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o interrogative - Attività formative integrative/affini.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL\'obiettifvo di questo insegnamento è di introdurre agli studenti i fondamenti della sicurezza informatica, ovvero proteggere i dati da agenti esterni e dalle azioni di utenti non autorizzati.\n'),(23,'Simulazione',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o interrogative - Attività formative integrative/affini.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\n	-Conoscenze di base necessarie alla descrizione probabilistica dei più semplici sisrtemi di servizio con uno o \n	 più servitori, ed analisi dei loro principali indici di prestazione e di affidabilità.\n	-Modelli di simulazione, problematica della scelta del simulatore e della pianificazione di un esperimento di \n	 simulazione.\n\nCapacità di applicare conoscenza e comprensione.\n	-Costruzione di sequenze di numeri pseudo-casuali uniformi e non uniformi, applicando alle sequenze \n	 generate opportuni metodi statistici.\n	-Simulazione di semplici sisrtemi di servizio, ricavando idonee stime dei principali indici di prestazione del \n	 del sistema.\n'),(24,'Programmazione avanzata',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o interrogative - Attività formative integrative/affini.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\nIl corso presenta modelli e tecniche di programmazione utili per affrontare problemi su scala reale. Attraverso il linguaggio Python ed una serie di esempi concreti gli allievi saranno guidati all\'utilizzo di strumenti complessi quali: classi e tecniche di programmazione Object-oriented, utilizzo dell\'ereditarietà multipla, ricorsione, gestione della concorrenza, utilizzo della tecnica delle continuazioni e programmazione ad eventi. Tra i vari esempi saranno sviluppati casi di studio relativi alla GUI, web e ditribuited programming. Nella presentazione del linguaggi Python saranno incluse le principali strutture dati (dizionari, liste, alberi) e le librerie più diffuse nell\'area web programming.\n\nCapacità di applicare conoscenza e comprensione.\nAl termine del corso gli studenti dovranno essere in grado di risolvere problemi complessi elaborando una strategia risolutiva in funzione dell librerie di classi Python già disponibili e delle esperienze maturate durante le lezioni. Una volta fornite le specifiche funzionali ogni studente dovrà individuare una soluzione ottimale basandosi sugli strumenti disponibili e sulla possibilità di trasformare il problema in input ad una delle classi di problemi già affrontati.\n'),(25,'Fisica',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o interrogative - Attività formative integrative/affini.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione.\nL\'insegnamento intende fornire, la conoscenza  delle nozioni di base e delle applicazioni della meccanica classica e dell\'elettromagnetismo.\n\nCapacità di applicare conoscenza e comprensione.\nLo studente dovrà saper risolvere semplici esercizi riguardanti problemi problemi elementari di meccanica ed elettormagnetismo.\n'),(27,'Tirocino Esterno 1',6,NULL,'primo o secondo semestre, dipende da quando si decide di fare il tirocinio.','La scelta di un tirocinio esterno può andare a sostituire la scleta di un esame a scelta libera.'),(28,'Tirocinio Esterno 2',6,NULL,'primo o secondo semestre, dipende da quando si decide di fare il tirocinio.','La scelta di un tirocinio esterno può andare a sostituire la scleta di un esame a scelta libera.'),(29,'Accompagnamento al lavoro',1,NULL,'annuale','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Ulteriori attività formative - Altre conoscenze utili per l\'inserimento nel mondo del lavoro.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL\'attività ha l\'obiettivo di trasferire conoscenze fondamentali su aspetti della professione attraverso seminari di cultura aziendale, ordine professionale, ruoli e mansioni nel mondo lavorativo, aspetti giuridici dell\'informatica, per un inserimento pronto ed efficace nel mondo del lavoro.\n'),(30,'Tirocinio',11,NULL,'primo o secondo semestre, dipende da quando si decide di fare il tirocinio.','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Ulteriori attività formative - Tirocini formativi e di orientamento.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL\'obiettivo formativo del tirocionio è quello di fornire un\'esperienza che permetta allo studente di verificare l\'applicazione pratica delle nozioni teoriche acquisite nel proprio percorso formativo e di conoscere un contesto organizzativo dove sperimentare una sepcifica attività lavorativa.\nIl tirocinio può essere svolto presso Aziende o Enti acreditati previa stipula di convenzione con il Dipartimento di Informatica o in un laboratorio di ricerca del Dipartimento, sotto la supervisione di un tutor.\n\nConoscenza e capacità di comprensione\n	-La comprensione dei legami tra teoria e pratica.\n	-L\'apprendimento di procedure e metodologie tipiche del lavoro dell\'informatico.\n\nCapacità di applicare conoscenza e comprensione.\n	-Capacità di applicare le conoscenze e le competenze acquisite durante il percorso foormativo nella\n	 progettazione, sviluppo e gestione di sistemi informatici;\n	-Capacità di affrontare e analizzare  problemi e di sviluppare sistemi informatici per la loro soluzione;\n	-Capacità di lavorare in gruppo, operare con definiti gradi di autonomia, rispettare gli impegni assunti nei\n	 modi e nei tempi richiesti e di inserirsi pienamente negli ambienti di lavoro.\n'),(31,'Prova Finale triennale',3,NULL,NULL,'TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Prova finale - Prova finale\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nLa Prova finale è intesa a valutare la preparazione generale dello studente, verificando sull\'ambito disciplinare di approfondimento prescelto per l\'esame la maturità scientifica, la capacità critica e la padronanza metodologica acquisita durante il triennio di studi universitari.\n\nConoscenza e capacità di comprensione.\nLo studente dovrà dimostrare di avere una solida conoscenza dell\'argomento oggetto della prova finale.\n\nCapacità di applicare conoscenza e comprensione.\nLo studente dovrà dimostrare di saper aplplicare le comoscenze acquisite nel corso degli studi per produrre con sufficiente autonomia un contributo originale che può essere di carattere teorico, metodologico, progettuale o implementativo.\n'),(32,'Affidabilità di sistemi',6,48,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\n• Metodi per il calcolo dell\'affidabilità di sistemi\n• Tecniche di manutenzione\n• Metodologie utilizzate nel contesto dell’affidabilità del software\n\nCapacità di Applicare Conoscenza e Comprensione:\n• Individuare opportune strategie per valutare e migliorare la qualità\ndel sistema'),(33,'Algoritmi avanzati',9,72,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti - discipline informatiche.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nIl corso si prefigge l’insegnamento di algoritmi avanzati per fornire allo\nstudente conoscenze più approfondite nel campo degli algoritmi.\n\nCapacità di Applicare Conoscenza e Comprensione\nSviluppo di una maggiore capacità nella risoluzione di problematiche\nalgoritmiche'),(34,'Architetture distribuite per il cloud.',9,72,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti - discipline informatiche.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL’insegnamento intende descrivere i concetti e le tecnologie che consentono il cloud e la computazione distribuita.\n\nConoscenza e Capacità di Comprensione\nLo studente approfondirà la conoscenza delle tecnologie moderne per l\'elaborazione distribuita incluso cluster, virtualizzazione, architettura orientate ai servizi, sistemi ad elevato parallelismo, sistemi P2P, Cloud Computing, social network e Internet delle Cose. La maggiore enfasi sarà data a concetti quali ubiquità, efficienza, scalabilità, disponibilità, programmabilità di sistemi paralleli, distribuiti e cloud.\n\nCapacità di Applicare Conoscenza e Comprensione\nLo studente acquisirà le seguenti capacità applicative:\n• Progettazione di un sistema distribuito utilizzando un ambiente di simulazione\n• Sperimentazione della connessione e dello scambio di informazioni, secondo vari modelli di sistemi distribuiti tra dispositivi di comunicazione di diversa tipologia, quali telefoni cellulari, PDA, PC, server, etc.\n'),(35,'Assistive Technology and Universal Design (English)',6,24,'secondo',''),(36,'Automi, Linguaggi e Complessità',9,72,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti - discipline informatiche.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nLo studente dovrà avere conoscenza:\n• Di modelli di calcolo con risorse limitate, quali automi a stati finiti, e automi Pushdown, e delle loro potenzialità, limiti e campi di applicazione.\n• Delle classi di complessità (in particolare, P, NP e Pspace) e delle relazioni tra di esse.\n\nCapacità di Applicare Conoscenza e Comprensione\n• Di riconoscere i problemi che possono essere risolti utilizzando soluzioni basate sui modelli di calcolo studiati.\n• Di catalogare i problemi dal punto di vista delle risorse (spazio e tempo) necessarie per la loro soluzione.'),(37,'Base di Dati II',9,72,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti - discipline informatiche.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\n• Conoscere l’organizzazione dei database su disco e le tecniche di indicizzazione.\n• Conoscere in modo approfondito i sistemi transazionali, la teoria della concorrenza e del recovery.\n• Conoscere in modo approfondito le problematiche inerenti la distribuzione in rete dei database.\n• Conoscere xml e concetti inerenti la gestione di basi di dati semi strutturate su Web.\n• Gestione della sicurezza nelle basi di dati, controllo dell’accesso e data privacy.\n• Principi di information retrieval e ricerche su Web.\n• Sistemi di business intelligence e big data.\n\nCapacità di Applicare Conoscenza e Comprensione:\n• Saper progettare sistemi informativi basati su alcune delle tecnologie summenzionate.\n• Saper progettare e gestire basi di dati semi-strutturate.\n• Saper usare un sistema per la gestione dei contenuti.\n• Saper progettare un data warehouse e un sistema di business intelligence.\n• Saper analizzare in modo critico modelli e tecnologie per l’information retrieval, proponendo loro estensioni o sperimentandone le prestazioni.'),(38,'Compilatori',6,48,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\n• I concetti principali dei linguaggi di programmazione.\n• Le tecniche di sviluppo per l\'implementazione di un linguaggio di programmazione.\n• Le fasi di un compilatore\n• I formalismi necessari per la specifica formale di un linguaggio di programmazione.\n• Gli algoritmi principali per la generazione automatica di traduttori e compilatori.\n\nCapacità di Applicare Conoscenza e Comprensione\n• L’uso di tools quali Flex e Javacup per l\'implementazione dei linguaggi di programmazione.\n• Lo sviluppo delle prime fasi di un compilatore.'),(39,'Compressione Dati',6,48,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\n• Base teorica della compressione dati.\n• Visione strutturata ed organica dei principali metodi e tecniche e degli standard di compressione dati.\n• Panoramica aggiornata dello stato dell\'arte in data compression.\n• Utilizzo delle tecniche appropriate di compressione dati nella trasmissione e/o nella memorizzazione di file digitali.\n\nCapacità di Applicare Conoscenza e Comprensione\n• Usare, configurare e scegliere il metodo più appropriato per affrontare un problema di compressione dati.\n• Progettare ed implementare applicazioni di tecniche di compressione dati.\n\nValutare, in termini di rapporto di compressione e di costi computazionali, le diverse tecniche di compressione ai fini della soluzione di uno specifico problema.'),(40,'Context Aware Security Analytics in Computer Vision (English)',9,45,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL’obiettivo formativo dell’insegnamento è fornire una panoramica dettagliata delle moderne tecniche da analisi di big data visuali finalizzate alla valutazione del contesto semantico visuale ed alla predizione dei comportamenti umani in situazioni critiche.\n\nConoscenza e capacità di comprensione\nConoscenza critica delle tecniche di Intelligenza Artificiale e Deep Learning nel contesto computer vision applicato a big data visuali per la valutazione del contesto ambientale e la predizione dei comportamenti umani.\n\nCapacità di Applicare Conoscenza e Comprensione\nLo studente al termine del Corso:\n• avrà conoscenza delle principali problematiche inerenti l’analisi e la sintesi di immagini e video digitali;\n• sarà in grado di comprendere la logica delle trasformate e delle tecniche di Intelligenza Artificiale e Deep Learning utilizzate nel contesto imaging applicato alla video content analysis.\n• sarà in grado di valutare criticamente quale tecnica si adatta meglio al contesto operativo di riferimento;\n• sarà in grado di utilizzare strumenti comparativi per misurare le prestazioni di una determinata tecnica in termini di efficienza ed efficacia;\n• sarà in grado di progettare e implementare autonomamente strategie migliorative a partire da tecniche base, in particolare individuando appropriate soluzioni progettuali per specifici    sistemi multibiometrici;\n• sarà in grado di sostenere conversazioni su tematiche relative agli aspetti fondamentali dell’Intelligenza Artificiale e del Deep Learning in computer vision, facendo ricorso ad una   terminologia scientifica adeguata, e agli strumenti della rappresentazione matematica e grafica dei principali fenomeni descritti;\n• realizzerà progetti software di medie dimensioni in Phyton, C o MATLAB in vari contesti applicativi con particolare riferimento all’ambito automotive, domotica avanzata e videosorveglianza.'),(41,'Cybersecurity',9,72,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nLo scopo fondamentale del corso è la costruzione dell’ecosistema delle competenze di cybersecurity adeguate a gestire strumenti ed architetture a supporto della sicurezza informatica e più specificamente:\n• Chiarire i principali concetti in ambito cybersecurity, ed evidenziare le potenziali minacce e le tecnologie disponibili per fronteggiarle.\n• Illustrare gli elementi di base per la sicurezza in rete considerando i principali scenari che descrivono lo stato dell’arte nonché le strategie di difesa, le soluzioni architetturali e gli strumenti disponibili attraverso l’uso di specifici casi di studio.\n\nPer fare ciò si partirà dalle necessarie conoscenze in termini di modelli organizzativi, aspetti legali, passando per le principali problematiche dinetwork security \n(individuazione e gestione attacchi, tecniche di filtraggio, firewalling, intrusion detection/prevention, anomaly detection) fino ad affrontare scenari più complessi (sicurezza delle comunicazioni wireless, delle organizzazioni cloud, dei social networks) o relativi alle infrastrutture critiche (perimetrazione del pericolo, gestione e risposta alle minacce).\nCapacità di Applicare Conoscenza e Comprensione\nAl termine del corso lo studente sarà in grado di:\n• Comprendere i principi di base relativi alla sicurezza delle\ninformazioni in rete, ed applicare gli stessi all’analisi critica ed\nalla valutazione della sicurezza di sistemi complessi in rete\n• Identificare le principali vulnerabilità dei sistemi in rete,\nriconoscere i meccanismi di attacco e di difesa e le opportune\nstrategie protezione, applicando le stesse per disegnare e valutare\ncontromisure ed architetture sicure\nLo studente, acquisendo un adeguato impianto metodologico/strategico,\nsarà inoltre in grado di adottare una corretta politica gestione dei rischi a\ntutela dei sistemi e delle infrastrutture a supporto dei servizi oggetto di\nprotezione, nonché di governare la reazione nei possibili scenari di\nincidente, garantendo la capacità di reazione immediata anche nei\nconfronti di attacchi su larga scala, che coinvolgano una pluralità di\nsoggetti.'),(42,'Data Science e Machine Learning',9,72,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzante\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL’insegnamento mira a fornire le competenze metodologiche e tecnologiche necessarie per estrarre conoscenza da grossi volumi di dati, mediante tecniche di Data Mining e Machine Learning, utilizzando opportune strategie di visualizzazione dei risultati. In particolare, si intendono integrare le conoscenze di data management acquisite nell’ambito di altri corsi di basi di dati con competenze utili allo svolgimento della professione del Data Scientist.\n\nConoscenza e Capacità di Comprensione\nLe principali conoscenze acquisite saranno:\n• Big Data\n• Data wrangling\n• Estrazione automatica di dipendenze tra i dati\n• Data quality e data cleansing\n• Data integration\n• Data e text mining\n• MapReduce\n• Funzioni di similarità\n• Machine learning\n• Visual data analytics\n• Data Journalism\n\nCapacità di Applicare Conoscenza e Comprensione\nGli studenti acquisiranno la capacità di:\n• Acquisire, organizzare, gestire ed elaborare grandi volumi di dati\n• Estrarre conoscenza dai dati\n• Selezionare dati utili\n• Organizzare un progetto basato su tecniche di machine learning\n• Comunicare la conoscenza estratta dai dati attraverso diverse forme di rappresentazione, incluso tecniche visuali'),(43,'Didattica dell\'informatica',6,30,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Attività a Scelta dello Studente – A Scelta dello Studente\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nL’insegnamento introduce gli studenti alle varie problematiche relative alla formazione in ambito informatico e alle tecniche per sviluppare e valutare materiale per l’insegnamento dell’informatica.\nGli studenti avranno:\n• comprensione degli aspetti pedagogici fondamentali e delle teorie di apprendimento in ambito informatico\n• comprensione degli standard dei curricula in Informatica\n• comprensione degli approcci esistenti per la formazione K-12\n• consapevolezza delle questioni relative alla scelta del primo linguaggio di programmazione e dei corsi di introduzione all’informatica\n• conoscenza delle tecniche di visualizzazione e animazione di algoritmi\n• consapevolezza delle questioni relative alla diversità di genere\n\nCapacità di Applicare Conoscenza e Comprensione\nEssere in grado di sviluppare un percorso e le relative risorse per trasferire conoscenze in ambito informatico'),(44,'Digital Forensics',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO:Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL’insegnamento introduce gli aspetti fondamentali della digital forensics.\n\nConoscenza e Capacità di Comprensione\nGli studenti avranno:\n• consapevolezza della importanza della digital forensics\n• conoscenza delle migliori pratiche per la gestione degli incidenti informatici\n• comprensione delle relazioni tra IT e forensics\n• conoscenza degli strumenti e delle tecniche per l’investigazione forense\n\nCapacità di Applicare Conoscenza e Comprensione\nGli studenti saranno in grado di applicare le conoscenze acquisite per gestire un problema di investigazione forense.'),(45,'Elementi di crittografia',9,72,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nIntrodurre agli studenti i fondamenti della crittografia moderna e di presentare primitive e protocolli crittografici.\n\nCapacità di Applicare Conoscenza e Comprensione\nFornire agli studenti gli strumenti per valutare primitive e protocolli crittografici in termini di sicurezza ed efficienza e di utilizzare in ogni contesto quelli opportuni.'),(46,'Enterprise Mobile Application Development',6,48,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nL\'insegnamento si propone di formare professionisti tecnici che possiedano un elevato grado di conoscenze sulle:\n• Applicazioni enterprise\n• Tecnologie mobili multipiattaforma e native\n\nCapacità di Applicare Conoscenza e Comprensione\n• Capacità di ideare e sviluppare applicazioni per dispositivi mobili rivolte all\'ambito enterprise\n• Valutare le caratteristiche peculiari delle applicazioni mobili e selezionare le tecnologie da utilizzare\n• Saper utilizzare tecnologie di back-end di applicazioni mobili\n• Capacità di rispettare le scadenze e lavorare in team\n• Capacità di scegliere le tecnologie da utilizzare in base agli obiettivi prefissati'),(47,'Financial Computing e Tecnologie per l\'High Frequency Trading',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nLo studente acquisirà le nozioni di base per modellare, progettare e sviluppare strategie automatiche di decision making in financial computing e high frequency trading.\n\nCapacità di Applicare Conoscenza e Comprensione\nLo studente sarà in grado di:\n- progettare strategie di decision making per la finanza e gli investimenti in contesti di high frequency trading.\n- progettare e sviluppare algoritmi per la finanza e gli investimenti in contesti on-line di media-alta complessità e ad alta frequenza di variazione\n- programmare applicativi in ambienti custom usando tecniche di programmazione visuale grafica'),(48,'Fondamenti di Data  Science',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzante\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL’insegnamento mira a fornire le competenze metodologiche e tecnologiche necessarie per estrarre conoscenza da grossi volumi di dati, mediante tecniche di Data Mining e Machine Learning, utilizzando opportune strategie di visualizzazione dei risultati. In particolare, si intendono integrare le conoscenze di data management acquisite nell’ambito di altri corsi di basi di dati con competenze utili allo svolgimento della professione del Data Scientist.\n\nConoscenza e Capacità di Comprensione\nLe principali conoscenze acquisite saranno:\n• Big Data\n• Data wrangling\n• Estrazione automatica di dipendenze tra i dati\n• Data quality e data cleansing\n• Data integration\n• Data e text mining\n• MapReduce\n• Funzioni di similarità\n• Machine learning\n• Visual data analytics\n• Data Journalism\n\nCapacità di Applicare Conoscenza e Comprensione\nGli studenti acquisiranno la capacità di:\n• Acquisire, organizzare, gestire ed elaborare grandi volumi di dati\n• Estrarre conoscenza dai dati\n• Selezionare dati utili\n• Organizzare un progetto basato su tecniche di machine learning\n• Comunicare la conoscenza estratta dai dati attraverso diverse forme di rappresentazione, incluso tecniche visuali'),(49,'Fondamenti di Visione Artificiale e Biometria',9,72,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti - discipline informatiche.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nLo studente dovrà avere conoscenza dei principali algoritmi di imaging, con particolare riferimento a quelli utilizzati nel contesto biometrico.\n\nCapacità di Applicare Conoscenza e Comprensione\nLo studente dovrà essere in grado di:\n• Analizzare problemi tipici e realizzare applicazioni che li risolvano progettando e realizzando algoritmi di imaging con varianti rispetto agli approcci classici per adeguarli a specifiche\nesigenze applicative\n• Individuare appropriate soluzioni progettuali per specifici sistemi multibiometrici\n• Realizzazione di progetti software di medie dimensioni in C o MATLAB'),(50,'Functional Programming for Scalable Computing (English)',6,24,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nLo studente imparerà il paradigma funzionale, comprendendo come questo può essere di particolare aiuto per situazioni in cui la concorrenza e il parallelismo nella computazione e nel trattare i dati sono di fondamentale importanza. Il linguaggio Scala verrà introdotto, focalizzandone l\'uso all\'interno del framework Apache Spark, la cui architettura ed obiettivi verranno presentati. La scalabilità delle applicazioni su Cloud sarà uno degli obiettivi del corso.\n\nCapacità di Applicare Conoscenza e Comprensione\nLo studente sarà in grado di progettare e scrivere semplici programmi in Scala, utilizzando il framework Apache Spark per l\'utilizzo nel campo di computazioni scalabili.'),(51,'Geographical Information Systems',6,48,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nGli studenti acquisiranno la conoscenza dei metodi e delle tecniche per l’analisi e la progettazione di sistemi informativi geografici con particolare riguardo ai seguenti argomenti: analisi dei requisiti e raccolta dati, modelli di dati, struttura dei dati georeferenziati, database geografici, interrogazioni dei dati e funzioni di analisi spaziale, standard internazionali\n e metadati spaziali, visualizzazione e interazione utente.\n\nCapacità di Applicare Conoscenza e Comprensione\nGli studenti saranno in grado di:\n• Utilizzare strumenti operativi (ArcGIS, PostGIS, QuantumGIS) e una metodologia progettuale per analizzare, progettare e consultare basi di dati spaziali inerenti vari domini di interesse.\n• Effettuare analisi di sistemi informativi territoriali a varie scale.\n• Progettare un sistema informativo geografico con funzionalità e interfaccia personalizzate.'),(52,'Gestione dei progetti software',9,72,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti - Discipline informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL’insegnamento introduce i concetti fondamentali del project management ed approfondisce le metodologie, i processi e le tecniche necessarie alla gestione dei progetti software.\n\nConoscenza e capacità di comprensione\nVengono coperte le 10 aree di conoscenza previste dalla guida PMBOK in cui sono fornite le conoscenze fondamentali per poter esercitare con successo la professione di project manager. Le aree di conoscenza vengono specializzate all’ambito dei progetti software. Verranno approfonditi gli approcci agili allo sviluppo del software.\nGli studenti acquisiranno la capacità di comprendere lo stato dell\'arte, la letteratura scientifica e gli standard internazionali nel settore della gestione dei progetti software e della qualità. Verranno introdotti i concetti fondamentali di product management. \n\nCapacità di applicare conoscenza e comprensione\nGli studenti saranno in grado di usare un approccio sistematico e organizzato alla gestione dei progetti software, di sviluppare proposte e piani di progetto, piani di qualità e rapporti sullo stato di avanzamento, e documenti di post-mortem review in accordo a standard e piani di qualità. Saranno in grado di applicare sia un approccio tradizionale sia un\napproccio agile. '),(53,'Information Visualization',6,48,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nGli studenti acquisiranno:\n• Conoscenza su tecniche di computer grafica tridimensionale e di realtà virtuale con particolare riferimento alle principali tecniche di modellazione, illuminazione, animazione e rendering, finalizzate alla realizzazione di content interattivo e non interattivo, real time e non real time, monoscopico e stereoscopico\n• Conoscenza dei principi della rappresentazione visuale di informazioni.\n• Conoscenza approfondita di information graphics e digital visualization.\n\nCapacità di Applicare Conoscenza e Comprensione\nGli studenti saranno in grado di:\n• Utilizzare strumenti di modellazione\n• Valutare la qualità di una rappresentazione visuale di informazioni.'),(54,'Informazione Quantistica e Computazione Quantistica',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Scelta libera\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nIl corso introduce gli elementi della teoria quantistica dell’informazione e della computazione, con l\'obiettivo di fornire una conoscenza di base dell’argomento con particolare riguardo alle possibili applicazioni nelle nuove tecnologie dell’informazione e della comunicazione.\n\nConoscenza e Capacità di Comprensione\nL\'insegnamento mira a far acquisire agli studenti in modo conciso e adeguato alle applicazioni, i fondamenti teorici della teoria quantistica dell’informazione e le loro applicazioni allo sviluppo e all’uso degli algoritmi quantistici. Gli studenti sono guidati ad apprendere in modo critico e responsabile ciò che viene spiegato in classe e ad arricchire le proprie capacità di giudizio attraverso lo studio del materiale didattico.\nAlla fine del corso, lo studente deve essere in grado di comprendere definizioni e dimostrazioni, e di gestire i problemi e le applicazioni riguardanti i contenuti del corso stesso.\n\nCapacità di Applicare Conoscenza e Comprensione\nIl corso si propone di rendere lo studente in grado di assimilare le conoscenze acquisite, di risolvere semplici esercizi di teoria della computazione quantistica con applicazioni a problemi di circuiti, algoritmi, e schemi di correzione degli errori. Il corso tenderà a favorire la capacità dello studente di esporre le conoscenze acquisite in modo chiaro e rigoroso.'),(55,'Ingegneria, Gestione ed evoluzione del Software',9,72,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nGli studenti acquisiranno conoscenze su concetti dell\'ingegneria del software che tipicamente non vengono affrontati nei corsi di primo livello, in particolare relativi ai processi del ciclo di vita del software, al testing, alla manutenzione e all\'evoluzione del software. Inoltre, gli studenti saranno introdotti ai temi della gestione del software. Gli studenti\nacquisiranno la capacità di comprendere lo stato dell\'arte, la letteratura scientifica e gli standard internazionali del settore dell\'ingegneria del software.\n\nCapacità di Applicare Conoscenza e Comprensione\nGli studenti saranno in grado di sviluppare, manutenere e gestire l’evoluzione di sistemi software con architetture complesse e distribuite. Gli studenti saranno inoltre in grado di pianificare e gestire le attività dei processi del ciclo di vita del software e di produrre documenti software in accordo a standard e piani di qualità.'),(56,'Integrazione Dati sul Web',9,72,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\n• Fondamenti, tecniche e strumenti per la gestione dei dati nel caso di fonti strutturate e semi-strutturate\n• Architetture di integrazione dati a schema mediato\n• Web search\n\nCapacità di Applicare Conoscenza e Comprensione\n• Modellare, organizzare, integrare ed interrogare dati provenienti da fonti eterogenee distribuite quali ad esempio basi di dati, pagine e servizi Web, etc. Attraverso l\'uso di strumenti software dedicati.\n• Sviluppare l\'autonomia nell\'ideare e progettare nuove applicazioni per la gestione dei dati che abbiano un concreto utilizzo nel mondo reale.'),(57,'Interactive System Design (English)',6,24,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nL\'insegnamento mira a far acquisire agli studenti conoscenza su:\n• Modelli, metodi e misure utilizzati nella progettazione e nell\'analisi di sistemi interattivi\n• Metodi empirici finalizzati a valutare sistemi interattivi\n• Temi fondamentali dell’interazione uomo-macchina, tra cui il contesto storico, i fattori umani e i principali elementi di interazione.\n\nCapacità di Applicare Conoscenza e Comprensione\nLo studente dovrà essere in grado di:\n• Progettare, realizzare e valutare interfacce utente, con particolare riferimento alle interfacce su dispositivi mobili, come smartphone e tablet.\n• Consultare le principali digital library contenenti la letteratura scientifica del settore, per arricchire autonomamente le competenze acquisite'),(58,'Interazione Uomo Macchna e Usabilità del software',9,72,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nDurante il corso sarà data enfasi allo sviluppo ‘user centered’, alla progettazione finalizzata all’usabilità e all’interaction design. Gli studenti apprenderanno l’uso di metodologie e tecniche di indagine etnografica volte all’individuazione dei requisiti utente, conosceranno i vantaggi di un approccio iterativo al design incentrato sull’utente e impareranno tecniche di ingegneria dell’usabilità, utili sia in fase di design che in fase di valutazione e di testing.\n\nCapacità di Applicare Conoscenza e Comprensione\nDa un punto di vista pratico, alla fine del corso, gli studenti saranno in grado di sviluppare sistemi software user centered, anche all’interno di ambienti collaborativi e di scegliere tra le metodologie e i paradigmi di interazione appresi, quelli più adatti al contesto d’uso cui un determinato sistema è destinato, sia questo di tipo singolo o multi-utente. Saranno\ninoltre in grado di applicare tecniche di empirical usability engineering per la valutazione sperimentale dei prototipi sviluppati.'),(59,'Internet of Things (English)',9,45,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL’obiettivo formativo dell’insegnamento è la creazione di competenze circa le tecnologie abilitanti, i protocolli, le architetture software e le applicazioni legate al paradigma emergente dell’Internet of Things (IoT).\n\nConoscenza e capacità di comprensione\nLo studente acquisirà i fondamenti architetturali e metodologici alla base dell’ecosistema Internet of Things (IoT) sviluppando competenze avanzate relativamente ai protocolli di comunicazione in rete specializzati per tale ambito, all’integrazione di dispositivi ubiqui pervasivi e mobili, secondo il paradigma Machine-to-Machine (M2M), considerando i vari tipi di sensori, attuatori e piattaforme middleware per la realizzazione di sistemi IoT basate su modelli edge/fog/distributed/gateway computing.\n\nCapacità di Applicare Conoscenza e Comprensione\nLo studente acquisirà la capacità di progettare ed implementare servizi basati sul paradigma dell\'Internet of Things nei suoi principali campi di utilizzo emergenti (Industry 4.0, domotica, intelligent transportation systems, dispositivi wearable, e-health, etc), imparando a padroneggiare le diverse piattaforme e scenari applicativi orientate all’implementazione\ndi soluzioni IoT avanzate.'),(60,'IoT Data Analytics (English)',9,45,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL’obiettivo formativo dell’insegnamento è quello di fornire le competenze metodologiche e tecnologiche necessarie per analizzare in tempo reale enormi flussi di dati provenienti da dispositivi IoT. In sostanza, si intendono integrare conoscenze di data management acquisite nell’ambito del corso di basi di dati della laurea triennale con competenze inerenti l’estrazione di dati sensoristici, il controllo della loro qualità, i modelli analitici e le tecniche di machine learning per IoT, al fine di  fornire le basi per lo svolgimento della professione del Data Scientist for IoT (IoT analyst).\n\nConoscenza e capacità di comprensione (knowledge and understanding):\nFar acquisire allo studente conoscenze sui modelli e sulle tecnologie per la gestione di grandi flussi di dati provenienti da sensori e dispositivi IoT di vario genere, al fine di consentire analisi utili ai fini di una gestione ottimale di processi produttivi e di reti tecnologiche. In particolare, il corso mira a sviluppare nello studente le seguenti conoscenze:\n- Elaborazione di dati sensoristici\n- Edge processing\n- Data Quality e Data Pre-processing per IoT\n- Database NoSQL per IoT\n- Modelli analitici per IoT\n- Machine learning per IoT\n- Sequence Data Mining\n- Sensor fusion in IoT\n- Real Time processing in IoT\n- Concetti di data Privacy e Blockchain per IoT\n- Tecniche di ML per l’addestramento Machine to Machine\n- Visualizzazione di dati IoT\n\nCapacità di applicare conoscenza e comprensione (applying knowledge and understanding):\nIl modulo corso mira a sviluppare nello studente le seguenti capacità:\n• Saper acquisire, gestire ed elaborare grandi flussi di dati provenienti da dispositivi IoT\n• Saper analizzare e migliorare in tempo reale la qualità di dati provenienti da dispositivi IoT\n• Saper selezionare le tecniche di analisi e di machine learning più idonee per l’analisi di dati sensoristici e di dispositivi IoT\n• Saper applicare tecniche di addestramento machine to machine'),(61,'Metodi di ottimizzazione',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nIl corso si propone di approfondire ed ampliare le conoscenze sui problemi di programmazione lineare intera, introdotti nel corso di ricerca operativa, con particolare riguardo a classi di problemi di rilevante interesse applicativo. Conoscere la programmazione matematica a generazione ritardata di colonne per la soluzione di problemi con un elevatissimo numero di variabili. Relativamente ai problemi di ottimizzazione lineare a variabili intere e binarie, conoscere i principali fondamenti di modellazione matematica di problemi di ottimizzazione combinatoriale. Conoscere gli algoritmi elementari per la risoluzione di problemi di ottimizzazione a variabili intere o binarie. Conoscere i fondamenti della ottimizzazione non lineare le condizioni di ottimo libero e vincolato e i principi dei principali algoritmi di soluzione. Conoscere i principi della ottimizzazione globale e dei metodi numerici e statistici usati per la stima parametrica dei modelli.\n\nCapacità di Applicare Conoscenza e Comprensione\nCapacità di riconoscere e abilità di formulare problemi decisionali di interesse applicativo che rientrano nella classe dei problemi di ottimizzazione lineare a variabili intere. Conoscenza delle proprietà matematiche dei problemi e della loro intrinseca complessità computazionale. Conoscenza degli algoritmi più recenti ed efficienti per la risoluzione esatta dei problemi di pli. Conoscenza degli elementi principali per la risoluzione di problemi di grandi dimensioni: calcolo di lower bound e progettazione di algoritmi euristici. Capacità di riconoscere e formulare problemi di ottimizzazione non lineare individuandone la funzione obiettivo e i vincoli, e di affrontarne la soluzione in contesti applicativi con la scelta e l\'utilizzo di software\nadeguati.'),(62,'Metodi numerici per l\'informatica',6,48,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nIl corso è finalizzato a consentire agli studenti di acquisire la conoscenza teorica di base sui principali metodi numerici utili allo sviluppo di software matematico per la risoluzione di problemi di calcolo scientifico di interesse nell’informatica.\n In particolare:\n• Metodi numerici sequenziali e paralleli per problemi che coinvolgono grandi moli di dati e che richiedono l’uso di matrici sparse e di grandi dimensioni; calcolo numerico per architetture a memoria distribuita e su graphics processing units (GPUs).\n• Sistemi di raccomandazione: tecniche basate su collaborativefiltering e su fattorizzazioni di matrici.\n• Tecniche di approssimazione per la grafica computerizzata, Bspline, trasformazioni 2D e 3D basate su affinità: rotazione, riflessione, scaling, shearing, traslazioni\n• Introduzione a Python per lo sviluppo di software matematico\n\nObiettivo delle lezioni in laboratorio è richiamare l’attenzione degli studenti sui principi su cui si basa lo sviluppo di software matematico efficiente, con riferimento alla valutazione delle prestazioni del software sviluppato o utilizzato, al confronto tra le prestazioni di codici basati su metodi numerici differenti.\n\nCapacità di Applicare Conoscenza e Comprensione\nIl corso ha come obiettivo rendere lo studente capace di risolvere problemi di calcolo scientifico presenti nelle applicazioni informatiche, mediante lo sviluppo e l’utilizzo di software matematico nei più diffusi ambienti di calcolo e linguaggi di programmazione.'),(63,'Metriche e qualità del software',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\n• Metriche per software orientato agli oggetti\n• Sull’uso e la valutazione di metriche da impiegare durante il processo di sviluppo e di manutenzione del software\n• Concetti fondamentali per progettare, pianificare e condurre studi empirici (e valutazioni sperimentali in genere)\n• Metodologie e strumenti per la raccolta di dati dalle diverse fonti disponibili durante lo sviluppo del software\n• Metodi statistici per l’analisi dei dati\n• Costruzione di modelli di predizione a partire dai dati raccolti su prodotti software e processi software, o a seguito di esperimenti\n\nCapacità di Applicare Conoscenza e Comprensione\n• Usare un approccio sistematico e organizzato per progettare, pianificare e condurre valutazioni sperimentali\n• Progettare esperimenti e casi di studio e successivamente raccogliere e analizzare i risultati degli studi condotti\n• Costruire modelli predittivi (ad es. predizione della difettosità, predizione dei costi) a partire da dati estratti da repository software (ad es. Promise, CVS, SVN)'),(64,'Penetration testing and Ethical Hacking',9,72,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO:Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nObiettivo dell’insegnamento è di fornire agli studenti le competenze per poter essere professionisti della sicurezza di rete, esperti di penetration test. dando una solida, pratica ed utile comprensione di come agiscono gli hacker e come si possono utilizzare gli stessi metodi e strumenti per proteggere i sistemi informatici contro attacchi provenienti dagli stessi\nhacker. Lo studente entrerà in possesso del necessario background tecnico e metodologico che gli consentirà di valutare lo stato ed i fabbisogni in termini di sicurezza di sistemi complessi, anche alla luce di specifici requisiti di conformità e certificazione, attraverso la comprensione delle vulnerabilità esistenti, e apprenderà quanto necessario per renderli\nsicuri, prevenendo le principali minacce e malfunzionamenti che potrebbero influenzarne la corretta operatività.\n\nCapacità di Applicare Conoscenza e Comprensione\nGli studenti saranno in grado di:\n• Valutare le debolezze e le potenziali vulnerabilità all’interno di sistemi ed infrastrutture ICT, attraverso tecniche di assessment e di analisi critica dei servizi oggetto di protezione, individuando i possibili scenari di incidente, al fine di prevedere eventuali contromisure e strategie di aggiornamento periodico e protezione.\n• Spiegare e utilizzare la metodologia standard per l\'esecuzione delle verifiche di sicurezza di rete e dei penetration test\n• Utilizzare strumenti comuni utilizzati dai professionisti della sicurezza di rete per lo svolgimento di verifiche di sicurezza della rete e dei penetration test\n• Identificare e spiegare minacce alla sicurezza presenti in rete con relativi exploit e vulnerabilità\n• Eseguire penetration test conformi agli standard internazionali;\n• Sviluppare la documentazione mirata da fornire alle controparti tecniche (CTO) ed esecutive (CEO) illustrando tutti gli aspetti dei controlli di sicurezza effettuati mediante i penetration test che sono stati eseguiti'),(65,'Programmazione concorrente, parallela e su cloud',9,72,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO:Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nGli studenti acquisiranno conoscenza di:\nPROGRAMMAZIONE CONCORRENTE: ANALISI DELLE PROBLEMATICHE E DELLE STRUTTURE DATI CONCORRENTIPIÙ NOTE (LISTE, CODE, TABELLE HASH, CODE A PRIORITÀ,\nETC.). SCHEDULING PARALLELO. ARCHITETTURA DI BASE DEI MULTIPROCESSORI E ARCHITETTURE MULTI-CORE.\nPROGRAMMAZIONE PARALLELA: ARCHITETTURE MESSAGE PASSING E SHARED MEMORY. MPI, COMUNICAZIONE POINT TO POINT, BLOCCANTE E NONBLOCCANTE. COMUNICAZIONE COLLETTIVA. USO DEL CLUSTER.\nCLOUD: INTRODUZIONE AL CLOUD ED AI MODELLI DI SERVIZIO SAAS, PAAS, IAAS CON ESEMPI. AMAZON WEB SERVICES: ARCHITETTURA E MODELLO DI UTILIZZO.\nBENCHMARKING DI APPLICAZIONI PARALLELE MPI SU CLOUD\n\nCapacità di Applicare Conoscenza e Comprensione\nGli studenti saranno in grado di:\nANALIZZARE LA COMPLESSITA’ E DIMOSTRARE LA CORRETTEZZA DI ALGORITMI SU STRUTTURE DATI CONCORRENTI. PROGETTARE E SCRIVERE SEMPLICI PROGRAMMI IN MPI ED EFFETTUARNE IL BENCHMARKING SU CLOUD AWS.'),(66,'Programmazione sicura',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nL’insegnamento introduce i principi e le pratiche della programmazione sicura.\n\nCapacità di Applicare Conoscenza e Comprensione\nLo studente sarà in grado di realizzare software in modo safe evitando vulnerabilità e sfruttando le caratteristiche di sicurezza fornite dalle librerie in modo appropriato ed efficace. Sarà in grado di specificare e rafforzare le politiche di sicurezza staticamente e dinamicamente (sia sul controllo degli accessi che sul flusso di informazioni).'),(67,'Rappresentazione e Trasmissione dell\'informazione',6,48,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nEsistono molte connessioni tra problemi che sorgono da applicazioni informatiche da un lato e la teoria dell\'informazione dall\'altro. Lo scopo di questo insegnamento è quello di esplorare tali connessioni al fine di utilizzare gli strumenti offerti dalla teoria dell’informazione per analizzare e fornire soluzioni a vari problemi informatici con particolare attenzione alla comunicazione in reti di calcolatori. Un primo obiettivo di questo insegnamento è l’acquisizione da parte dello studente della conoscenza del concetto di misura dell’informazione e\ndelle sue applicazioni a problemi informatici. Tale concetto permetterà di rispondere a domande quali: qual è il minimo numero (medio) di bits necessari per ricostruire un testo?\nLa seconda parte delle lezioni sarà rivolta all’acquisizione del concetto di protezione dell’informazione verso errori di scrittura/lettura o di trasmissione. Saranno introdotte le nozioni di codifica per il controllo degli errori. L’enfasi sarà posta sulle idee ed i metodi più utili alle applicazioni informatiche.\n\nCapacità di Applicare Conoscenza e Comprensione\nL\'obiettivo è quello di ampliare la capacità dello studente di astrarre problemi formali e progettare soluzioni di tipo teorico-informazionale partendo da problemi informatici concreti.'),(68,'Reti ad Hoc',6,48,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nLo studente dovrà:\n• Acquisire una visione specialistica delle reti di sensori da un lato, e dell’approccio “Swarm” per la risoluzione di alcuni problemi inerenti le reti ad hoc dall’altro. In particolare per le reti di sensori dovrà assumere familiarità con le tecnologie di progettazione delle stesse e per le reti ad hoc con l’analisi dell’uso di algoritmi ispirati dal comportamento collettivo di agenti semplici, quali api e formiche, per la risoluzione del routing, dell’autoconfigurazione IP e della connettività con internet\n• Comprendere in profondità le scelte fondamentali e le tecnologie alla base dell’erogazione dei principali servizi delle reti di sensori e la loro gestione nei principali ambienti operativi, nonché l’impatto dell’approccio Swarm per le reti ad hoc per ciò che concerne il miglioramento delle prestazioni dei suddetti algoritmi.\n• Conoscere le nozioni teoriche alla base della trasmissione dei dati senza fili e delle relative problematiche connesse al mezzo trasmissivo non guidato\n• Conoscere in modo approfondito le modifiche che necessariamente devono essere apportate ai protocolli della suite TCP/IP\n\nCapacità di Applicare Conoscenza e Comprensione\nLo studente dovrà essere in grado di configurare ed amministrare reti di sensori e di implementare algoritmi Swarm per la simulazione di reti ad hoc attraverso l’uso di NS-3.'),(69,'Reti geografiche: struttura analisi e prestazioni',9,72,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL’obiettivo formativo dell’insegnamento è quello di introdurre concetti relativi alle reti geografiche, in modo da permetterne lo studio della struttura, l’analisi delle caratteristiche e delle loro prestazioni.\n\nConoscenza e capacità di comprensione\n● La misurazione delle reti geografiche risulta di fondamentale importanza per capire l\'attuale infrastruttura di Internet, il suo funzionamento, e possibili miglioramenti che possono essere effettuati nel futuro. Tuttavia, ci sono varie sfide in questo campo dovute principalmente alla sua natura dinamica ed alle sue proprietà statistiche, notevolmente diverse da quelle dei mezzi di comunicazione convenzionali.\n● Questo corso introdurrà concetti relativi alla infrastruttura di Internet ed al suo funzionamento. Verranno introdotti i concetti di misurazione del traffico di rete attraverso lo studio di diverse problematiche relativo all\'accesso ad Internet (anche da dispositivi mobile) e l\'analisi di diverse applicazioni.\n\nCapacità di Applicare Conoscenza e Comprensione\n● Gli studenti di questo corso acquisiranno le competenze per l\'analisi del traffico di rete, per l\'analisi delle prestazioni di sistemi Internet e per l\'utilizzo di diversi software di analisi.'),(70,'Reti sociali',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nQuesto insegnamento ha come scopo quello di fornire un quadro il più possibile esaustivo della recente ricerca sullo studio e l\'analisi delle moderne reti, con particolare attenzione alle reti sociali. L\'attenzione non sarà sugli aspetti tecnologici ma piuttosto sulla comprensione dei processi e delle dinamiche che si sviluppano all\'interno di una rete.\n\nCapacità di Applicare Conoscenza e Comprensione\nAl termine del processo di apprendimento gli studenti saranno in grado di:\n• Realizzare l’analisi e la sintesi dei principali processi che si sviluppano all’interno di una rete\n• Descrivere con linguaggio appropriato le informazioni ricavate dall’analisi strutturale della rete e spiegare i processi di influenza e condizionamento che si verificano all’interno di una rete\n• Applicare le conoscenze per la progettazione e gestione di reti sociali'),(71,'Reti Wireless',9,72,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL’obiettivo formativo dell’insegnamento è quello di introdurre concetti relativi alle reti geografiche, in modo da permetterne lo studio della struttura, l’analisi delle caratteristiche e delle loro prestazioni.\n\nConoscenza e capacità di comprensione\n● La misurazione delle reti geografiche risulta di fondamentale importanza per capire l\'attuale infrastruttura di Internet, il suo funzionamento, e possibili miglioramenti che possono essere effettuati nel futuro. Tuttavia, ci sono varie sfide in questo campo dovute principalmente alla sua natura dinamica ed alle sue proprietà statistiche, notevolmente diverse da quelle dei mezzi di comunicazione convenzionali.\n● Questo corso introdurrà concetti relativi alla infrastruttura di Internet ed al suo funzionamento. Verranno introdotti i concetti di misurazione del traffico di rete attraverso lo studio di diverse problematiche relativo all\'accesso ad Internet (anche da dispositivi mobile) e l\'analisi di diverse applicazioni.\n\nCapacità di Applicare Conoscenza e Comprensione\n● Gli studenti di questo corso acquisiranno le competenze per l\'analisi del traffico di rete, per l\'analisi delle prestazioni di sistemi Internet e per l\'utilizzo di diversi software di analisi.'),(72,'Servless Computing for IoT (English)',9,45,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL’obiettivo formativo dell’insegnamento è presentare i concetti di Base di Cloud Computing, con i modelli di servizio IaaS, PaaS, SaaS, focalizzandosi poi sul Serverless Computing e sulla modalità FaaS (Function as a Service). In questa modalità il progettista scrive le funzioni da eseguire sulla piattaforma Cloud senza alcun server da installare, ma lasciando alla piattaforma cloud il compito della esecuzione e della  automatica scalabilità. Il modello di servizio del Serverless Computing è particolarmente adatto alla gestione delle applicazioni basate su reti di sensori IoT, programmando direttamente le funzioni che vengono chiamate da eventi scatenati dai messaggi inviati dai sensori.\n\nConoscenza e capacità di comprensione\n• Cloud computing: motivazioni e modelli di servizio (IaaS, PaaS, SaaS). Il serverless computing: motivazioni e funzionamento. Progettazione di semplici applicazioni serverless basate su diversi linguaggi tramite Amazon Lambda functions. IoT programming su cloud. L’ambiente AWS IoT. La programmazione su edge tramite AWS Greengrass. Capacità di Applicare Conoscenza e Comprensione.\n• Realizzazione di sempliti applicazioni IoT su simulatori e apparecchiature dedicate IoT, su AWS IoT. Programmazione di dispositivi Edge tramite AWS Greengrass'),(73,'Sicurezza dei Dati',9,72,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL\'obiettivo di questo insegnamento è di introdurre agli studenti i fondamenti della sicurezza informatica, ovvero proteggere i dati da agenti esterni e dalle azioni di utenti non autorizzati.'),(74,'Sistemi Operativi Avanzati',9,72,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\n• Panoramica completa sui moderni sistemi operativi basati su approcci microkernel per sistemi multiprocessore (SMP).\n• Principali architetture parallele e struttura di un sistema multicore. I concetti di grid e cloud computing.\n• Evoluzione dei sistemi di calcolo dai sistemi paralleli fino ai moderni data center, ridisegnando l\'architettura del sistema operativo e introducendo tutti i nuovi moduli necessari\n• Principali differenze nei moduli per la gestione dei processi,scheduling e gestione della memoria virtuale\n• Gestione della virtualizzazione delle risorse di calcolo, sistemi per la full-virtualization o para-virtualization\n• File system distribuiti ad alte prestazioni per la comunicazione e la cooperazione tra macchine virtuali\n\nCapacità di Applicare Conoscenza e Comprensione\n• Installazione, configurazione ed amministrazione di un cluster di workstation (PC) attraverso l’utilizzo del middleware Hadoop\n• Progettare e realizzare applicazioni distribuite basate sul paradigma del MapReduce136\n• Configurare ed ottimizzare le prestazioni di un file system distribuito\n• Configurare e gestire un sistema basato sulla virtualizzazione'),(75,'Software Dependability (English)',9,43,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL’obiettivo formativo dell’insegnamento è quello di fornire le metodologie e le tecniche di analisi, progettazione e verifica di affidabilità del software. In particolare, tali concetti vengono affrontati inquadrandoli nel contesto dei sistemi software complessi e critici.\n\nConoscenza e capacità di comprensione\n• Gli studenti acquisiranno le conoscenze relative alle metodologie e le tecniche di analisi, progettazione e verifica di affidabilità del software. Gli studenti acquisiranno la capacità di comprendere lo stato dell’arte, la letteratura scientifica e gli standard internazionali del settore.\n\nCapacità di Applicare Conoscenza e Comprensione\n• Gli studenti saranno in grado di applicare le conoscenze relativealle metodologie e tecniche di analisi, progettazione e verifica di affidabilità del software, in particolare nel contesto dei sistemi software complessi e critici.'),(76,'Statistica e analisi dei dati',9,72,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\n• Sviluppo di metodi e tecniche per il trattamento e l\'analisi di dati utilizzando uno dei più potenti e flessibili software statistici, ossia il linguaggio di programmazione R (http://www.r-project.org/)\n• Statistica descrittiva e inferenziale con R\n\nCapacità di Applicare Conoscenza e Comprensione\n• Problemi applicativi legati al trattamento e all\'analisi dei dati\n• Sviluppo di applicazioni informatiche per la gestione, la manipolazione e l’analisi di dati statistici'),(77,'Tecniche Automatiche per la Correttezza del Software',6,48,'primo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\n\nConoscenza e Capacità di Comprensione\nAcquisizione delle competenze di base sulle tecniche di verifica automatica basate su model-checking e testing. Comprendere le differenze e la complementarietà tra queste metodologie e altre metodologie di verifica utilizzate in pratica. Acquisire familiarità con le problematiche legate all\'utilizzo di queste tecnologie e le principali soluzioni adottate. Comprendere gli algoritmi sviluppati.\n\nCapacità di Applicare Conoscenza e Comprensione\nCapacità di individuare la classe di modelli e i linguaggi di specifica più appropriati rispetto ai programmi da analizzare. Capacità di utilizzare un model-checker per eseguire le verifiche di correttezza su sistemi reali. Capacità di modulare le risorse di computazione per poter utilizzare il model-checking per programmi molto complessi\n'),(78,'Web Semantico',6,48,'secondo','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nGli studenti acquisiranno le capacità di astrazione necessarie per la modellazione concettuale e logica di un dominio di interesse, attraverso l’uso di schemi ontologici. Inoltre acquisiranno metodi e tecniche per estrarre dati dalle basi di conoscenza semantiche.\n\nCapacità di Applicare Conoscenza e Comprensione\nCapacità di impiegare gli strumenti/linguaggi ontologici nella definizione e costruzione di ontologie. Capacità di modellare e integrare gli aspetti semantici in applicazioni Web oriented'),(79,'Lingua Inglese B1',6,48,NULL,'TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Lingua Straniera – Per la Conoscenza di almeno una Lingua\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nLo studente dovrà dimostrare di conoscere la Lingua Inglese con un livello almeno pari ad ALTE 2 (CEFR B1).\n\nConoscenza e Capacità di Comprensione\nLo studente ha acquisito la conoscenza di un vocabolario fondamentale e di espressioni di uso comune, nonché la grammatica e la fonetica fondamentale.\n\nCapacità di Applicare Conoscenza e Comprensione\nLo studente dovrà essere in grado di comprendere frasi ed espressioni d’uso frequente relative ad ambiti rilevanti (es. informazioni di base sulla persona e sulla famiglia, acquisti, geografia locale, lavoro). Lo studente riesce a comunicare con disinvoltura in situazioni che possono verificarsi in un contesto internazionale, in attività semplici e di abitudine che\nrichiedono uno scambio di informazioni su argomenti familiari e comuni, e riesce a comunicare le sue opinioni e a spiegarne le ragioni. '),(80,'Lingua Inglese B2',6,48,NULL,'TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO:Ulteriori Attività Formative – Ulteriori Conoscenze Linguistiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nL’insegnamento focalizza la propria attenzione sulla descrizione di diverse varietà di lingua inglese attraverso gli strumenti messi a disposizione dalla linguistica.\n\nCapacità di Applicare Conoscenza e Comprensione\nL’obiettivo è quello di rendere capaci gli studenti di comunicare in qualunque situazione quotidiana, di leggere e comprendere/redigere testi in lingua, di saper relazionare su eventi accaduti e descrivere situazioni particolari. Alla fine delle lezioni lo studente avrà raggiunto un livello di competenza pari al B2 del Quadro comune europeo di riferimento per le lingue, che gli consentirà di affrontare con sicurezza:\n• Situazioni comunicative sociali di difficoltà media/elevata a livello di lingua scritta e lingua parlata\n• Temi specifici e d’avanguardia del proprio corso di studi con la relativa acquisizione di lessico e strutture tecniche.'),(81,'Intelligenza artificiale',9,72,'ND','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatich\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL\'obiettivo principale dell\'insegnamento consiste nel fornire agli studenti le basi teoriche ed applicative per l’analisi, la progettazione e lo sviluppo di sistemi intelligenti.\n\nConoscenza e Capacità di Comprensione\nLo studente acquisirà conoscenza di base su:\n- Agenti intelligenti e strategie di ricerca per la risoluzione di problemi;\n- Metodi di rappresentazione della conoscenza;\n- Rappresentazione di conoscenza incerta e metodi probabilistici diinferenza;\n- Reti neurali.\n\nCapacità di Applicare Conoscenza e Comprensione\nLo studente sarà in grado di:\n- analizzare problemi risolvibili tramite tecniche di intelligenza artificiale;\n- identificare tra le tecniche di intelligenza artificiale studiate quelle più idonee alla risoluzione del problema;\n- individuare le tecnologie software di supporto alle tecniche di intelligenza artificiale scelte per la risoluzione di un problema;\n- progettare sistemi intelligenti per la risoluzione di un problema.'),(82,'Altre conoscenze utili per l\'inserimento nel mondo del lavoro',1,NULL,'annuale','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Ulteriori attività formative - Altre conoscenze utili per l\'inserimento nel mondo del lavoro.\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL’obiettivo è di preparare lo studente all’inserimento nel mondo del lavoro, curando gli aspetti di presentazione e di interazione con le aziende durante la fase di ricerca'),(83,'Prova Finale magistrale',23,NULL,NULL,'TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Prova finale - Prova finale\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nLa Prova finale è intesa a valutare la preparazione generale dello studente,verificando sull’ambito disciplinare di approfondimento prescelto per l’esame la maturità scientifica, la capacità critica e la padronanza metodologica acquisite durante il percorso di studi universitari.\n\nConoscenza e Capacità di Comprensione\nLo studente dovrà dimostrare di avere una solida conoscenza dell’argomento oggetto della prova finale e della letteratura scientifica  relativa.\n\nCapacità di Applicare Conoscenza e Comprensione\nLo studente dovrà dimostrare di saper applicare le conoscenze acquisite nel corso degli studi per produrre con ampio grado di autonomia un contributo originale che può essere di carattere teorico, metodologico, progettuale o implementativo. '),(84,'Security (English)',9,45,'ND','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Caratterizzanti – Discipline Informatiche\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione\nLo studente sarà in grado di comprendere i rischi di sicurezza e privacy connessi all’Internet of Things, le principali vulnerabilità, e svilupperà competenze avanzate relativamente alle strategie per mitigare tali rischi.\n\nCapacità di Applicare Conoscenza e Comprensione\nLo studente acquisirà la capacità di:\n- identificare e analizzare i rischi di sicurezza e privacy in ambito IoT;\n- progettare e implementare soluzioni sicure'),(85,'International School on IoT (English)',6,30,'ND','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione\nLo studente acquisirà conoscenza e comprensione delle problematiche di ricerca nell’ambito dell’IoT.'),(86,'Lab of IoT (English)',6,48,'ND','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nCapacità di Applicare Conoscenza e Comprensione\nLo studente acquisirà la capacità di progettare ed implementare servizi e applicazioni IoT e sperimentarli in campi emergenti per la realizzazione di soluzioni IoT avanzate.'),(87,'Human Computer Interaction and Experience Design in the Internet of Things (English)',6,30,'ND','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini e Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nL’insegnamento si prefigge l’obiettivo di fornire allo studente concetti chiave legati all’adozione di tecniche di Human Computer Interaction e di Experience Design per l’Internet of Things .\n\nConoscenza e capacità di comprensione\nCi si aspetta che lo studente possa acquisire conoscenze su:\n- teorie, principi e tecniche di human-computer interaction particolarmente appropriate per il dominio dell’IoT\n- tecniche di design dell’interazione ‘smart’ con oggetti ‘smart’\n- questioni legate agli aspetti etici, alla fiducia e all’accettabilità sociale nell’IoT\n- metodi per valutare la tecnologia persuasiva e il suo impatto sulla la user experience.\n\nCapacità di Applicare Conoscenza e Comprensione\nLo studente imparerà come applicare:\n-concetti e teorie dell’HCI per progettare e valutare oggetti connessi\n- tecnologie persuasive all’interno di ambienti smart, che interessano diverse sfere della vita di un individuo.'),(88,'Robot Programming (English)',6,30,'ND','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e capacità di comprensione\nLo studente apprenderà i principi fondamentali e le applicazioni pratiche dei sistemi di robot e dei sistemi di internet of robotic things (IoRT) systems.\n\nCapacità di Applicare Conoscenza e Comprensione\nLo studente acquisirà la capacità di progettare e sviluppare sistemi di robot e IoRT. '),(89,'Embedded System',6,30,'ND','ND'),(90,'Advanced programming (English)',6,30,'ND','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Attività a Scelta dello Studente – A Scelta dello Studente\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nTecniche avanzate di gestione della memoria. Uso pratico di tabelle hash ed espressioni regolari. Scanner e generatori di compilatori.\n\nCapacità di Applicare Conoscenza e Comprensione\nGli studenti saranno in grado di applicare tecniche e aspetti di ottimizzazione per fare in modo che il codice rispetti significativi vincoli di risorse (per esempio nel caso di sistemi embedded). Saranno in grado di progettare e implementare piccoli linguaggi per descrivere specifiche azioni o oggetti. In generale gli studenti miglioreranno le loro capacità di problem solving.'),(91,'Sistemi Informativi Direzionali',6,48,'ND','TIPOLOGIA ATTIVITÀ FORMATIVA - AMBITO: Affini o Integrativi – Attività Formative Affini o Integrative\n\nOBIETTIVI FORMATIVI: RISULTATI D\'APPRENDIMENTO PREVISTI E COMPETENZE DA ACQUISIRE.\nConoscenza e Capacità di Comprensione\nIl corso si propone di trasmettere conoscenze nel campo dei sistemi informativi aziendali, integrati nel contesto aziendale, e di fornire strumenti di diagnosi di tale contesto.\n\nCapacità di Applicare Conoscenza e Comprensione\nIl corso ha finalità soprattutto applicative, che consentiranno allo studente di mettere subito in pratica le conoscenze acquisite e di avere capacità di comprensione del contesto aziendale in cui potrà trovarsi a operare.\r');
/*!40000 ALTER TABLE `esame` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `formato`
--

DROP TABLE IF EXISTS `formato`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `formato` (
  `CodiceGEOp` int NOT NULL,
  `CodiceEsame` int NOT NULL,
  PRIMARY KEY (`CodiceEsame`,`CodiceGEOp`),
  KEY `CodiceGEOp_idx` (`CodiceGEOp`),
  CONSTRAINT `CodiceGEOp` FOREIGN KEY (`CodiceGEOp`) REFERENCES `gruppoesamiopzionali` (`codicegeop`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `Esame` FOREIGN KEY (`CodiceEsame`) REFERENCES `esame` (`CodiceEsame`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `formato`
--

LOCK TABLES `formato` WRITE;
/*!40000 ALTER TABLE `formato` DISABLE KEYS */;
INSERT INTO `formato` VALUES (1,18),(1,19),(1,20),(1,21),(1,22),(1,23),(1,24),(1,25),(1,27),(1,28),(2,33),(2,36),(2,42),(2,56),(2,72),(2,73),(2,74),(3,39),(3,43),(3,50),(3,52),(3,62),(3,63),(3,67),(3,68),(3,70),(3,77),(3,81),(4,33),(4,49),(4,56),(4,60),(4,73),(4,74),(6,32),(6,34),(6,43),(6,52),(6,57),(6,61),(6,62),(6,66),(6,70),(7,87),(7,88),(7,89),(8,33),(8,36),(8,37),(8,42),(8,49),(8,55),(8,65),(8,74),(9,38),(9,39),(9,43),(9,44),(9,52),(9,57),(9,66),(9,67),(9,70),(9,77),(9,81),(10,42),(10,58),(10,59),(10,64),(10,65),(10,73),(10,75),(10,76),(11,32),(11,43),(11,46),(11,47),(11,51),(11,53),(11,63),(11,66),(11,77),(11,87),(11,90),(11,91);
/*!40000 ALTER TABLE `formato` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `formazione`
--

DROP TABLE IF EXISTS `formazione`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `formazione` (
  `CodiceGEOb` int NOT NULL,
  `CodiceEsame` int NOT NULL,
  PRIMARY KEY (`CodiceGEOb`,`CodiceEsame`),
  KEY `CodEsame_idx` (`CodiceEsame`),
  CONSTRAINT `CodEsame` FOREIGN KEY (`CodiceEsame`) REFERENCES `esame` (`CodiceEsame`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `CodiceGEOb` FOREIGN KEY (`CodiceGEOb`) REFERENCES `gruppoesamiobbligatori` (`codicegeob`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `formazione`
--

LOCK TABLES `formazione` WRITE;
/*!40000 ALTER TABLE `formazione` DISABLE KEYS */;
INSERT INTO `formazione` VALUES (1,1),(1,2),(1,3),(1,4),(1,5),(1,6),(2,7),(2,8),(2,9),(2,10),(2,11),(2,12),(2,13),(3,14),(3,15),(3,16),(3,17),(3,29),(3,30),(3,31),(5,34),(6,37),(12,37),(12,38),(8,40),(11,41),(6,42),(10,45),(13,52),(12,55),(8,59),(8,60),(10,64),(4,65),(4,69),(8,72),(10,73),(8,75),(6,76),(4,80),(6,80),(8,80),(10,80),(12,80),(7,81),(5,82),(7,82),(9,82),(11,82),(13,82),(5,83),(7,83),(9,83),(11,83),(13,83),(9,84),(9,85),(9,86);
/*!40000 ALTER TABLE `formazione` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `gruppoesamiobbligatori`
--

DROP TABLE IF EXISTS `gruppoesamiobbligatori`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `gruppoesamiobbligatori` (
  `CodiceGEOb` int NOT NULL,
  `Anno` int NOT NULL,
  `Curriculum` int NOT NULL,
  PRIMARY KEY (`CodiceGEOb`),
  KEY `IDCurriculum_idx` (`Curriculum`),
  CONSTRAINT `Curriculum` FOREIGN KEY (`Curriculum`) REFERENCES `curriculum` (`IDCurriculum`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `gruppoesamiobbligatori`
--

LOCK TABLES `gruppoesamiobbligatori` WRITE;
/*!40000 ALTER TABLE `gruppoesamiobbligatori` DISABLE KEYS */;
INSERT INTO `gruppoesamiobbligatori` VALUES (1,1,1),(2,2,1),(3,3,1),(4,1,2),(5,2,2),(6,1,3),(7,2,3),(8,1,4),(9,2,4),(10,1,5),(11,2,5),(12,1,6),(13,2,6);
/*!40000 ALTER TABLE `gruppoesamiobbligatori` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `gruppoesamiopzionali`
--

DROP TABLE IF EXISTS `gruppoesamiopzionali`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `gruppoesamiopzionali` (
  `CodiceGEOp` int NOT NULL,
  `Anno` int NOT NULL,
  `TotCFU` int NOT NULL,
  `IDCurriculum` int NOT NULL,
  PRIMARY KEY (`CodiceGEOp`),
  KEY `IDCurriculum_idx` (`IDCurriculum`),
  CONSTRAINT `IDCurriculum` FOREIGN KEY (`IDCurriculum`) REFERENCES `curriculum` (`IDCurriculum`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `gruppoesamiopzionali`
--

LOCK TABLES `gruppoesamiopzionali` WRITE;
/*!40000 ALTER TABLE `gruppoesamiopzionali` DISABLE KEYS */;
INSERT INTO `gruppoesamiopzionali` VALUES (1,3,6,1),(2,1,27,2),(3,2,24,2),(4,1,18,3),(6,2,18,3),(7,2,12,4),(8,1,18,5),(9,2,24,5),(10,1,27,6),(11,2,18,6);
/*!40000 ALTER TABLE `gruppoesamiopzionali` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `insegnamento`
--

DROP TABLE IF EXISTS `insegnamento`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `insegnamento` (
  `CodiceDocente` int NOT NULL,
  `CodiceEsame` int NOT NULL,
  `classe` varchar(60) NOT NULL,
  KEY `CodiceEsame_idx` (`CodiceEsame`),
  CONSTRAINT `CodiceEsame` FOREIGN KEY (`CodiceEsame`) REFERENCES `esame` (`CodiceEsame`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `insegnamento`
--

LOCK TABLES `insegnamento` WRITE;
/*!40000 ALTER TABLE `insegnamento` DISABLE KEYS */;
INSERT INTO `insegnamento` VALUES (1,1,'1 congrui a 0'),(1,34,'unica'),(2,1,'2 congrui a 1'),(2,66,'unica'),(3,1,'3 congrui a 2'),(3,10,'3 congrui a 2'),(4,2,'1 congrui a 0'),(5,2,'2 congrui a 1'),(6,2,'3 congrui a 2'),(7,3,'1 congrui a 0'),(8,3,'1 congrui a 0'),(9,3,'2 congrui a 1'),(9,6,'2 congrui a 1'),(9,51,'unica'),(10,3,'2 congrui a 1'),(10,40,'unica'),(11,3,'3 congrui a 2'),(11,40,'unica'),(11,49,'unica'),(12,4,'1 congrui a 0'),(13,4,'2 congrui a 1'),(13,8,'1 congrui a 0'),(13,8,'2 congrui a 1'),(13,8,'3 congrui a 2'),(13,11,'1 congrui a 0'),(13,11,'2 congrui a 1'),(13,11,'3 congrui a 2'),(13,44,'unica'),(13,48,'unica'),(13,54,'unica'),(13,59,'unica'),(13,64,'unica'),(13,65,'unica'),(13,68,'unica'),(13,71,'unica'),(13,75,'unica'),(14,4,'3 congrui a 2'),(14,47,'unica'),(15,5,'1 congrui a 0'),(15,14,'1 pari'),(16,5,'2 congrui a 1'),(16,36,'unica'),(17,5,'3 congrui a 2'),(17,9,'3 congrui a 2'),(17,70,'unica'),(18,6,'1 congrui a 0'),(18,12,'3 congrui a 2'),(18,57,'unica'),(19,6,'3 congrui a 2'),(19,7,'3 congrui a 2'),(20,7,'1 congrui a 0'),(20,77,'unica'),(21,7,'2 congrui a 1'),(21,15,'2 dispari'),(21,63,'unica'),(22,8,'1 congrui a 0'),(22,37,'unica'),(22,60,'unica'),(23,8,'2 congrui a 1'),(23,42,'unica'),(23,60,'unica'),(24,8,'3 congrui a 2'),(24,51,'unica'),(24,78,'unica'),(25,9,'1 congrui a 0'),(25,74,'unica'),(26,9,'2 congrui a 1'),(26,39,'unica'),(27,9,'3 congrui a 2'),(27,21,'unica'),(27,53,'unica'),(28,10,'1 congrui a 0'),(28,67,'unica'),(29,10,'2 congrui a 1'),(29,24,'unica'),(30,11,'1 congrui a 0'),(30,16,'2 dispari'),(30,69,'unica'),(31,11,'2 congrui a 1'),(31,11,'3 congrui a 2'),(31,41,'unica'),(31,59,'unica'),(32,12,'1 congrui a 0'),(33,12,'2 congrui a 1'),(33,46,'unica'),(34,12,'3 congrui a 2'),(34,38,'unica'),(34,56,'unica'),(35,13,'1 congrui a 0'),(36,13,'2 congrui a 1'),(36,32,'unica'),(37,13,'3 congrui a 2'),(38,15,'1 pari'),(38,55,'unica'),(38,75,'unica'),(39,15,'2 dispari'),(39,43,'unica'),(39,52,'unica'),(40,16,'1 pari'),(40,50,'unica'),(40,65,'unica'),(40,72,'unica'),(41,14,'2 dispari'),(41,67,'unica'),(41,70,'unica'),(42,17,'1 pari'),(42,61,'unica'),(43,17,'2 dispari'),(44,18,'unica'),(44,33,'unica'),(45,19,'unica'),(45,35,'unica'),(45,58,'unica'),(46,20,'unica'),(47,22,'unica'),(47,73,'unica'),(48,23,'unica'),(48,76,'unica'),(49,25,'unica'),(50,45,'unica'),(51,62,'unica');
/*!40000 ALTER TABLE `insegnamento` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `offertaformativa`
--

DROP TABLE IF EXISTS `offertaformativa`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `offertaformativa` (
  `AnnoOffertaFormativa` char(7) NOT NULL,
  `visibilita` tinyint(1) NOT NULL,
  PRIMARY KEY (`AnnoOffertaFormativa`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `offertaformativa`
--

LOCK TABLES `offertaformativa` WRITE;
/*!40000 ALTER TABLE `offertaformativa` DISABLE KEYS */;
INSERT INTO `offertaformativa` VALUES ('2018/19',1);
/*!40000 ALTER TABLE `offertaformativa` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `utente`
--

DROP TABLE IF EXISTS `utente`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `utente` (
  `Username` varchar(45) NOT NULL,
  `Password` varchar(45) NOT NULL,
  PRIMARY KEY (`Username`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `utente`
--

LOCK TABLES `utente` WRITE;
/*!40000 ALTER TABLE `utente` DISABLE KEYS */;
INSERT INTO `utente` VALUES ('admin','admin'),('frafra','frafra'),('francesco','aurilio9');
/*!40000 ALTER TABLE `utente` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2023-07-01 15:38:20
